* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: sans-serif;
}

body {
  width: 100%;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #ffe5e5;
}

.container {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  text-align: center;
  align-items: center;
  gap: 20px;
  max-width: 500px;
  margin: 20px;
}

.item {
  flex: 1 1 300px; /* Kích thước tối thiểu là 300px */
  margin: 10px;
}

@media (max-width: 768px) {
  .item {
      flex: 1 1 100%; /* Đối với màn hình nhỏ hơn 768px */
  }
}

img {
  max-width: 100%; /* Hình ảnh không vượt quá chiều rộng của phần tử cha */
  height: auto; /* Giữ tỉ lệ khung hình */
}


.container img {
  max-width: 300px;
  padding-right: 30px;

}

.container .btn {
  display: flex;
  gap: 25px;
}

.btn a {
  text-decoration: none;
  color: #111;
  background: #fff;
  padding: 10px 25px;
  border-radius: 8px;
  box-shadow: 0.5rem 1rem 3rem hsl(0, 0%, 0%, 0.3);
}

.slider{
  width: 100%;
  border: 1px solid rgb(255, 255, 255);
  height: var(--height);
}

.slider .list{
  display: flex;
}

.slider .list .item{
  width: var(--width);
  height: var(--height);
}

.slider .list .item img{
  width: 100px;
}



.image{
  width: 100%;
  height: auto;
  padding-left: 1500px;
  
}

.slider{
  width: 100%;
  height: var(--height);
  overflow: hidden;
  mask-image: linear-gradient(
      to right,
      transparent,
      #000 10% 90%,
      transparent
  );
}
.slider .list{
  display: flex;
  width: 100%;
  min-width: calc(var(--width) * var(--quantity));
  position: relative;
}
.slider .list .item{
  width: var(--width);
  height: var(--height);
  position: absolute;
  left: 100%;
  animation: autoRun 10s linear infinite;
  transition: filter 0.5s;
  animation-delay: calc( (10s / var(--quantity)) * (var(--position) - 1) - 10s)!important;
}
.slider .list .item img{
  width: 100%;
}
@keyframes autoRun{
  from{
      left: 100%;
  }to{
      left: calc(var(--width) * -1);
  }
}
.slider:hover .item{
  animation-play-state: paused!important;
  filter: grayscale(1);
}
.slider .item:hover{
  filter: grayscale(0);
}
.slider[reverse="true"] .item{
  animation: reversePlay 10s linear infinite;
}
@keyframes reversePlay{
  from{
      left: calc(var(--width) * -1);
  }to{
      left: 100%;
  }
}